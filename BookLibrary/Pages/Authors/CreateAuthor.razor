@using BookLibrary.Data.Models;
@using BookLibrary.Db.Interfaces;

@page "/Authors/Create"

@inject IAuthorRepository repository
@inject NavigationManager nagivation
@inject IMapper mapper

<EntityForm Title="Create Author">
    <EditForm Model="authorModel" OnValidSubmit="Success">
        <DataAnnotationsValidator />
        <p>
            <MatTextField Label="First Name" @bind-Value="authorModel.FirstName" FullWidth="true" />
        </p>
        <p>
            <MatTextField Label="Middle Name" @bind-Value="authorModel.MiddleName" FullWidth="true" />
        </p>
        <p>
            <MatTextField Label="Last Name" @bind-Value="authorModel.LastName" FullWidth="true" />
        </p>
        <MatButton Type="submit" Raised="true">Create</MatButton>
    </EditForm>
</EntityForm>

@code {
    AuthorModel authorModel = new AuthorModel();

    private async Task Success(EditContext editContext)
    {
        if (editContext.Validate())
        {
            var author = mapper.Map<Author>(authorModel);
            await repository.AddAsync(author);

            nagivation.NavigateTo("/Authors/List");
        }
    }
}
