@page "/groups/add"

@attribute [Authorize(Roles = "Admin")]

@inject IBookGroupRepository repository
@inject IMapper mapper
@inject NavigationManager uri
@inject IStringLocalizer<GroupsLocalization> loc

<h1>@loc["Create"]</h1>

<Form Model="@model"
      OnFinish="OnFinish">
    <FormItem Label="@loc["Title"]">
        <Input @bind-Value="@context.Title" />
    </FormItem>
    <FormItem Label="@loc["Parent"]">
        <Select @bind-Value="@context.Parent"
                AllowClear="true"
                DataSource="groups"
                LabelName="@nameof(BookGroupModel.Title)" />
    </FormItem>
    <FormItem>
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            @loc["Save"]
        </Button>
    </FormItem>
</Form>

@code {
    private BookGroupModel model = new BookGroupModel();
    private List<BookGroupModel> groups = new List<BookGroupModel>();

    protected override async Task OnInitializedAsync()
    {
        var bookGroups = await repository.ListAllAsync();
        groups.AddRange(bookGroups.Select(i => mapper.Map<BookGroup, BookGroupModel>(i)));
    }

    private async Task OnFinish(EditContext editContext)
    {
        var bookGroup = mapper.Map<BookGroupModel, BookGroup>(model);
        bookGroup.Parent = model.Parent != null ? await repository.GetByIdAsync(model.Parent.Id) : null;
        await repository.AddAsync(bookGroup);
        uri.NavigateTo("/groups/list");
    }
}
